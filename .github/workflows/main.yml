name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    needs: create_release # we need to know the upload URL
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'
          
      - name: Install pyinstaller
        run: |
          pip install wheel
          git clone https://github.com/pyinstaller/pyinstaller.git
          cd pyinstaller/bootloader
          python ./waf all
          cd ..; python setup.py install

      - name: Build executable
        run: pyinstaller -F launcher.py
      
      - name: Create a Build Artifact (unix)
        uses: actions/upload-artifact@v2.2.4
        if: matrix.os != 'windows-latest'
        with:
          name: launcher-${{ matrix.os }}
          path: dist/launcher
          
      - name: Create a Build Artifact (windows)
        uses: actions/upload-artifact@v2.2.4
        if: matrix.os == 'windows-latest'
        with:
          name: launcher-${{ matrix.os }}.exe
          path: dist/launcher.exe

      - name: Upload release assets (unix)
        uses: actions/upload-release-asset@v1
        if: matrix.os != 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: launcher-${{ matrix.os }}
          asset_path: dist/launcher
          asset_content_type: application/octet-stream
          
      - name: Upload release assets (windows)
        uses: actions/upload-release-asset@v1
        if: matrix.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: launcher-${{ matrix.os }}.exe
          asset_path: dist/launcher.exe
          asset_content_type: application/octet-stream


